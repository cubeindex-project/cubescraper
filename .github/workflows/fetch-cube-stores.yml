name: Fetch cube store catalogues

permissions:
  contents: write

# ──────────────────────────────────────────────────────────────────────────────
# 1. Run nightly at 03:00 UTC (adjust as you wish)
#    + reusable “dispatch” so you can trigger it manually from the Actions tab
# ──────────────────────────────────────────────────────────────────────────────
on:
  schedule:
    - cron: "0 3 * * *" # every day at 03:00 UTC
  workflow_dispatch:

# ──────────────────────────────────────────────────────────────────────────────
# 2. One job per store thanks to a matrix
#    (keys MUST match the ones in STORES inside scrape_with_async_spinner.py)
# ──────────────────────────────────────────────────────────────────────────────
jobs:
  scrape:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        store: [scs, cubicle, cubelelo, dailypuzzles, gancube, kewbz, sc-za]

    steps:
      # 2.1  Check out your repo
      - uses: actions/checkout@v4

      # 2.2  Set up Python (same version you test locally)
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 2.3  Install runtime deps (requests + any others you need)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests glom

      # 2.4  Run the scraper for the store in this matrix slot
      - name: Scrape ${{ matrix.store }}
        run: |
          python fetch_stores_products.py ${{ matrix.store }}

      # 2.5  Upload the JSON as a workflow artifact (keeps history even
      #      if you don’t commit the file back to the repo)
      - name: Upload catalogue
        uses: actions/upload-artifact@v4
        with:
          name: products-${{ matrix.store }}
          path: ${{ matrix.store }}_products.json

  commit-all:
    needs: scrape
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      # 3.1 Download all product JSON artifacts into the repo root
      - name: Download all catalogues
        uses: actions/download-artifact@v4
        with:
          pattern: products-*
          path: .
          merge-multiple: true

      # 3.2 Commit & push if anything actually changed
      - name: Commit refreshed catalogues
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Stage every JSON placed in the repo root by download-artifact
          git add *_products.json

          # Abort early if no file changed
          if git diff --cached --quiet; then
            echo "Nothing new to commit."
            exit 0
          fi

          git commit -m "chore(data): refresh cube catalogues"
          git push
